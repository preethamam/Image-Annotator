#:kivy 1.0
#:import kivy kivy
#:import win kivy.core.window

FloatLayout:
    canvas:
        Color:
            rgb: 1,255,255
        Rectangle:
            source: 'data/images/background.jpg'
            size: self.size

    BoxLayout:
        padding: 10
        spacing: 10
        size_hint: 1, None
        pos_hint: {'top': 1}
        height: 44

<PicturesFrame>:
    picture_1: picture_1
    picture_1_center: (root.width * 0.35, root.height * 0.5)  # Center of left panel
    picture_2: picture_2
    picture_2_center: (root.width * 0.85, root.height * 0.75)  # Top of right panel
    picture_past: picture_past
    picture_past_center: (root.width * 0.85, root.height * 0.25)  # Bottom of right panel
    counter_label: counter_label
    
    canvas:
        # Vertical dividing line
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: root.width * 0.7, 0
            size: 2, root.height
            
    # Main image (left panel)
    Picture:
        id: picture_1
        center: root.picture_1_center
        size_hint: None, None

    # Next image (top right)
    Picture:
        id: picture_2
        center: root.picture_2_center
        size_hint: None, None

    # Past image (bottom right)
    Picture:
        id: picture_past
        center: root.picture_past_center
        size_hint: None, None

    # Counter label at bottom left
    Label:
        id: counter_label
        font_size: 20
        text: '1/1'
        pos: 20, 20
        size_hint: None, None
        size: self.texture_size

<Picture>:
    # each time a picture is created, the image can delay the loading
    # as soon as the image is loaded, ensure that the center is changed
    # to the center of the screen.
    size: image.size
    size_hint: None, None
    center_hint: (0,0)
    source: ''
    pic: image
    labelText: labelText

    Image:
        id: image
        source: root.source

        # create initial image to be 400 pixels width
        size: 640, int(640 / self.image_ratio) if self.image_ratio and self.image_ratio > 0 else 640

        allow_stretch: True

        # Add this binding to handle texture loading
        on_texture: root.parent.update_image_size(root) if root.parent and hasattr(root.parent, 'update_image_size') else None

    # Position the label at the bottom-left corner of the image
    Label:
        id: labelText
        font_size: 25
        color: 1, 1, 1, 1  # White color
        pos: 0, -self.height  # Position below the image
        text_size: image.width, None  # Constrain text width to image width
        halign: 'center'  # Center-align text
        size_hint: None, None
        size: self.texture_size